apiVersion: batch/v1
kind: Job
metadata:
  name: create-parquet-bucket
  namespace: {{ .Values.namespace }}
  labels:
    app: create-parquet-bucket
spec:
  completions: {{ .Values.createParquatBucket.completions }}
  template:
    metadata:
      labels:
        app: create-parquet-bucket
    spec:
      restartPolicy: Never
      containers:
        - name: create-parquet-bucket
          image: {{ .Values.createParquatBucket.image }}
          envFrom:
            - configMapRef:
                name: koku-config
          imagePullPolicy: Always
          command:
            - /bin/sh
            - -c
            - >
              /usr/bin/mc config host rm local;
              /usr/bin/mc config host add --quiet --api s3v4 local $MINIO_ENDPOINT $S3_ACCESS_KEY $S3_SECRET;
              /usr/bin/mc rb --force local/koku-bucket/;
              /usr/bin/mc mb --quiet local/koku-bucket/;
              /usr/bin/mc anonymous set public local/koku-bucket;
              /usr/bin/mc rb --force local/ocp-ingress/;
              /usr/bin/mc mb --quiet local/ocp-ingress/;
              /usr/bin/mc anonymous set public local/ocp-ingress;
              /usr/bin/mc rb --force local/metastore/;
              /usr/bin/mc mb --quiet local/metastore/;
              /usr/bin/mc anonymous set public local/metastore;
          volumeMounts:
            - name: minio-storage
              mountPath: /home/kminio/data
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: create-parquet-bucket-pvc
